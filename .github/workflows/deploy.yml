name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  check-skip-ci:
    runs-on: ubuntu-latest
    outputs:
      skip: ${{ steps.check.outputs.skip }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check for [skip ci] in commit message
        id: check
        run: |
          if [[ "${{ github.event.head_commit.message }}" == *"[skip ci]"* ]]; then
            echo "::set-output name=skip::true"
          else
            echo "::set-output name=skip::false"
          fi

  build-and-deploy:
    needs: check-skip-ci
    if: needs.check-skip-ci.outputs.skip == 'false'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          tags: ${{ secrets.DOCKER_USERNAME }}/bookkeeper:dotnet-latest
          push: true

      - name: Deploy to remote server
        env:
          HOST: ${{ secrets.REMOTE_HOST }}
          USER: ${{ secrets.REMOTE_USER }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          echo "$SSH_PRIVATE_KEY" > private_key
          chmod 600 private_key
          ssh -i private_key -o StrictHostKeyChecking=no $USER@$HOST 'docker compose -f /root/www/bkp/bkp-dn/docker-compose.yml down || true && sudo rm -f /root/www/bkp/bkp-dn/docker-compose.yml'
          scp -i private_key -o StrictHostKeyChecking=no docker-compose.yml $USER@$HOST:/root/www/bkp/bkp-dn/docker-compose.yml
          ssh -i private_key -o StrictHostKeyChecking=no $USER@$HOST <<EOF
            docker compose -f /root/www/bkp/bkp-dn/docker-compose.yml pull
            docker compose -f /root/www/bkp/bkp-dn/docker-compose.yml up -d
            docker system prune -f
          EOF
          rm -rf private_key
